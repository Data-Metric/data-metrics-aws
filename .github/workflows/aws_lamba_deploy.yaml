# ********************************************************#
# AWS Lambda Deploy workflow adds caching the Docker image on AWS ECR so
# subsequent runs of the workflow doesn't require rebuilding the image from scratch.
# The Dockerfile is simple in this example, but a more production-grade Dockerfile
# with linux packages to install, a lengthier requirements.txt file, etc. will
# benenfit greatly from image caching.
# ********************************************************#

name: AWS Lambda Deploy

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_ECR_IMAGE_TAG: latest
      AWS_DEFAULT_REGION: us-east-1
      AWS_LAMBDA_FUNC_NAME: data-metrics-get-mf
      AWS_ECR_REPOSITORY_NAME: data-metrics-mf-aws

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          AWS_ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build \
            --build-arg MF_API_KEY="${{ secrets.MF_API_KEY }}" \
            --build-arg AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
            --build-arg AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            --build-arg AWS_DEFAULT_REGION="${{ env.AWS_DEFAULT_REGION }}" \
            -t $AWS_ECR_REGISTRY/$AWS_ECR_REPOSITORY_NAME:$AWS_ECR_IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $AWS_ECR_REGISTRY/$AWS_ECR_REPOSITORY_NAME:$AWS_ECR_IMAGE_TAG
          #echo "::set-output name=image::$AWS_ECR_REGISTRY/$AWS_ECR_REGISTRY:$AWS_ECR_IMAGE_TAG"

      - name: Deploy to AWS Lambda
        env:
          AWS_ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          aws lambda update-function-code \
          --function-name $AWS_LAMBDA_FUNC_NAME \
          --image-uri $AWS_ECR_REGISTRY/$AWS_ECR_REPOSITORY_NAME:$AWS_ECR_IMAGE_TAG

        
